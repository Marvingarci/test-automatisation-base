f10:57:25.417 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
n10:57:25.430 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['name']
f10:57:25.430 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
ë10:57:25.430 [Test worker] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $ key name value Hero-6d97fe9b-0113-46ea-86a4-f9066e656bcd
Ü10:57:25.441 [Test worker] DEBUG io.netty.util.internal.logging.InternalLoggerFactory -- Using SLF4J as the default logging framework
i10:57:25.442 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- -Dio.netty.noUnsafe: false
_10:57:25.442 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- Java version: 21
s10:57:25.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.theUnsafe: available
t10:57:25.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.copyMemory: available
t10:57:25.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- sun.misc.Unsafe.storeFence: available
q10:57:25.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.Buffer.address: available
û10:57:25.443 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
w10:57:25.444 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.Bits.unaligned: available, true
·10:57:25.444 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @68e965f5
é10:57:25.444 [Test worker] DEBUG io.netty.util.internal.PlatformDependent0 -- java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
h10:57:25.444 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- sun.misc.Unsafe: available
v10:57:25.449 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- maxDirectMemory: 536870912 bytes (maybe)
¢10:57:25.449 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.tmpdir: /var/folders/kv/py4g7s8d09lfrb080bvxh6cr0000gn/T (java.io.tmpdir)
z10:57:25.449 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.bitMode: 64 (sun.arch.data.model)
]10:57:25.449 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- Platform: MacOS
r10:57:25.450 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.maxDirectMemory: -1 bytes
Ç10:57:25.450 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.uninitializedArrayAllocationThreshold: -1
q10:57:25.450 [Test worker] DEBUG io.netty.util.internal.CleanerJava9 -- java.nio.ByteBuffer.cleaner(): available
n10:57:25.450 [Test worker] DEBUG io.netty.util.internal.PlatformDependent -- -Dio.netty.noPreferDirect: false
r10:57:25.480 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:25.483 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:25.483 [Test worker] DEBUG com.intuit.karate -- request:
N1 > POST http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters
21 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 137
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate
ä{"name":"Hero-6d97fe9b-0113-46ea-86a4-f9066e656bcd","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}

˘10:57:25.484 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:25.487 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 0][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:25.487 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:25.555 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:25.645 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63647<->54.165.58.209:80
é10:57:25.645 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: set socket timeout to 30000
ã10:57:25.645 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /maragarc/api/characters HTTP/1.1
r10:57:25.645 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:25.646 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
v10:57:25.646 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> POST /maragarc/api/characters HTTP/1.1
}10:57:25.646 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> Content-Type: application/json; charset=UTF-8
c10:57:25.647 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> Content-Length: 137
{10:57:25.647 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:25.647 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> Connection: Keep-Alive
Ç10:57:25.647 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:25.647 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 >> Accept-Encoding: gzip,deflate
}10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "POST /maragarc/api/characters HTTP/1.1[\r][\n]"
Ñ10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
j10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Content-Length: 137[\r][\n]"
Ç10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
â10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "[\r][\n]"
ÿ10:57:25.647 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 >> "{"name":"Hero-6d97fe9b-0113-46ea-86a4-f9066e656bcd","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}"
d10:57:25.768 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "HTTP/1.1 201 [\r][\n]"
e10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Server: Cowboy[\r][\n]"
¶10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D"}]}[\r][\n]"
˝10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D[\r][\n]"
—10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Connection: keep-alive[\r][\n]"
u10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Content-Type: application/json[\r][\n]"
q10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Date: Fri, 20 Jun 2025 16:57:25 GMT[\r][\n]"
e10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Via: 1.1 vegur[\r][\n]"
y10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Server-Timing: cfReqDur;dur=64.298[\r][\n]"
Ä10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "Cf-Team: 282fdf2808000111d45f41a400000001[\r][\n]"
W10:57:25.769 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "[\r][\n]"
]10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << HTTP/1.1 201 
^10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Server: Cowboy
ü10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D"}]}
ˆ10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D
 10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:25.770 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Connection: keep-alive
n10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Content-Type: application/json
j10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Transfer-Encoding: chunked
s10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Date: Fri, 20 Jun 2025 16:57:25 GMT
^10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Via: 1.1 vegur
r10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Server-Timing: cfReqDur;dur=64.298
y10:57:25.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-0 << Cf-Team: 282fdf2808000111d45f41a400000001
|10:57:25.775 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:25.824 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "87[\r][\n]"
ﬁ10:57:25.825 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "{"id":19,"name":"Hero-6d97fe9b-0113-46ea-86a4-f9066e656bcd","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor",[\r][\n]"
X10:57:25.825 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "A[\r][\n]"
a10:57:25.825 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << ""Flight"]}[\r][\n]"
X10:57:25.825 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "0[\r][\n]"
W10:57:25.825 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-0 << "[\r][\n]"
œ10:57:25.826 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 0][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:25.826 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: set socket timeout to 0
Å10:57:25.826 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 0][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:25.826 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:25.826 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-0: Close connection
~10:57:25.827 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:25.827 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 342
1 < 201
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438645&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=EHyTpwMwRaPDbyQz3BjJRC1ME9Vvh27pmuzSvE80sFM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:25 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=64.298
.1 < Cf-Team: 282fdf2808000111d45f41a400000001
í{"id":19,"name":"Hero-6d97fe9b-0113-46ea-86a4-f9066e656bcd","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}

r10:57:25.835 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:25.836 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:25.836 [Test worker] DEBUG com.intuit.karate -- request:
S2 > DELETE http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/19
02 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
2 > Connection: Keep-Alive
72 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"2 > Accept-Encoding: gzip,deflate


˘10:57:25.836 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:25.836 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 1][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:25.836 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:25.836 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:25.923 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63650<->54.165.58.209:80
é10:57:25.924 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: set socket timeout to 30000
ê10:57:25.924 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request DELETE /maragarc/api/characters/19 HTTP/1.1
r10:57:25.924 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:25.924 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
{10:57:25.924 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 >> DELETE /maragarc/api/characters/19 HTTP/1.1
{10:57:25.924 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:25.924 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 >> Connection: Keep-Alive
Ç10:57:25.924 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:25.924 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 >> Accept-Encoding: gzip,deflate
Ç10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "DELETE /maragarc/api/characters/19 HTTP/1.1[\r][\n]"
Ç10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Connection: Keep-Alive[\r][\n]"
â10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:25.924 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 >> "[\r][\n]"
d10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "HTTP/1.1 204 [\r][\n]"
e10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Server: Cowboy[\r][\n]"
¶10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}[\r][\n]"
˝10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D[\r][\n]"
—10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Connection: keep-alive[\r][\n]"
z10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Date: Fri, 20 Jun 2025 16:57:26 GMT[\r][\n]"
e10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Via: 1.1 vegur[\r][\n]"
y10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Server-Timing: cfReqDur;dur=37.753[\r][\n]"
Ä10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "Cf-Team: 282fdf291c000111d45f432400000001[\r][\n]"
W10:57:26.019 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-1 << "[\r][\n]"
]10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << HTTP/1.1 204 
^10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Server: Cowboy
ü10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
ˆ10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
 10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Connection: keep-alive
s10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Date: Fri, 20 Jun 2025 16:57:26 GMT
^10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Via: 1.1 vegur
r10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Server-Timing: cfReqDur;dur=37.753
y10:57:26.019 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-1 << Cf-Team: 282fdf291c000111d45f432400000001
|10:57:26.019 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
œ10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 1][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: set socket timeout to 0
Å10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 1][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-1: Close connection
~10:57:26.020 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:26.020 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 184
2 < 204
2 < Server: Cowboy
‘2 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
´2 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
2 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
2 < Connection: keep-alive
(2 < Date: Fri, 20 Jun 2025 16:57:26 GMT
2 < Via: 1.1 vegur
'2 < Server-Timing: cfReqDur;dur=37.753
.2 < Cf-Team: 282fdf291c000111d45f432400000001


r10:57:26.033 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:26.033 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:26.033 [Test worker] DEBUG com.intuit.karate -- request:
T1 > DELETE http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/999
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate


˘10:57:26.033 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:26.033 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 2][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:26.033 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:26.033 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:26.114 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63652<->54.165.58.209:80
é10:57:26.114 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: set socket timeout to 30000
ë10:57:26.114 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request DELETE /maragarc/api/characters/999 HTTP/1.1
r10:57:26.114 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:26.114 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
|10:57:26.115 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 >> DELETE /maragarc/api/characters/999 HTTP/1.1
{10:57:26.115 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:26.115 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 >> Connection: Keep-Alive
Ç10:57:26.115 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:26.115 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 >> Accept-Encoding: gzip,deflate
É10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "DELETE /maragarc/api/characters/999 HTTP/1.1[\r][\n]"
Ç10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Connection: Keep-Alive[\r][\n]"
â10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:26.115 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 >> "[\r][\n]"
d10:57:26.208 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "HTTP/1.1 404 [\r][\n]"
e10:57:26.208 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Server: Cowboy[\r][\n]"
¶10:57:26.208 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}[\r][\n]"
˝10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D[\r][\n]"
—10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Connection: keep-alive[\r][\n]"
u10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Content-Type: application/json[\r][\n]"
q10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Date: Fri, 20 Jun 2025 16:57:26 GMT[\r][\n]"
e10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Via: 1.1 vegur[\r][\n]"
y10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Server-Timing: cfReqDur;dur=38.219[\r][\n]"
Ä10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "Cf-Team: 282fdf29d9000111d45f44e400000001[\r][\n]"
W10:57:26.209 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "[\r][\n]"
]10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << HTTP/1.1 404 
^10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Server: Cowboy
ü10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
ˆ10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
 10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Connection: keep-alive
n10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Content-Type: application/json
j10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Transfer-Encoding: chunked
s10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Date: Fri, 20 Jun 2025 16:57:26 GMT
^10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Via: 1.1 vegur
r10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Server-Timing: cfReqDur;dur=38.219
y10:57:26.209 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-2 << Cf-Team: 282fdf29d9000111d45f44e400000001
|10:57:26.209 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "15[\r][\n]"
l10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "{"error":"Character n[\r][\n]"
X10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "A[\r][\n]"
a10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "ot found"}[\r][\n]"
X10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "0[\r][\n]"
W10:57:26.255 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-2 << "[\r][\n]"
œ10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 2][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: set socket timeout to 0
Å10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 2][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-2: Close connection
~10:57:26.255 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:26.255 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 222
1 < 404
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:26 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=38.219
.1 < Cf-Team: 282fdf29d9000111d45f44e400000001
 {"error":"Character not found"}

f10:57:26.261 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
j10:57:26.280 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:26.344 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
l[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@6f85ee02
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3e43f049
p[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@147cc940
w[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@6f85ee02
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@755a7218
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:26.346 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
:---------------------------------------------------------
Jfeature: classpath:com/pichincha/features/MarvelHeros/deleteHeros.feature
7scenarios:  2 | passed:  2 | failed:  0 | time: 1.0009
:---------------------------------------------------------

r10:57:26.591 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:26.591 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:26.591 [Test worker] DEBUG com.intuit.karate -- request:
M1 > GET http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate


˘10:57:26.591 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:26.591 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 3][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:26.591 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:26.591 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:26.676 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63657<->54.165.58.209:80
é10:57:26.676 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: set socket timeout to 30000
ä10:57:26.676 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request GET /maragarc/api/characters HTTP/1.1
r10:57:26.676 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:26.676 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
u10:57:26.676 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 >> GET /maragarc/api/characters HTTP/1.1
{10:57:26.680 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:26.680 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 >> Connection: Keep-Alive
Ç10:57:26.680 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:26.680 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 >> Accept-Encoding: gzip,deflate
|10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "GET /maragarc/api/characters HTTP/1.1[\r][\n]"
Ç10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Connection: Keep-Alive[\r][\n]"
â10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:26.680 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 >> "[\r][\n]"
d10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "HTTP/1.1 200 [\r][\n]"
e10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Server: Cowboy[\r][\n]"
¶10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}[\r][\n]"
˝10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D[\r][\n]"
—10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Connection: keep-alive[\r][\n]"
u10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Content-Type: application/json[\r][\n]"
q10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Date: Fri, 20 Jun 2025 16:57:26 GMT[\r][\n]"
e10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Via: 1.1 vegur[\r][\n]"
y10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Server-Timing: cfReqDur;dur=38.761[\r][\n]"
Ä10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Cf-Team: 282fdf2c0a000111d45f45f400000001[\r][\n]"
W10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "[\r][\n]"
Z10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "85A[\r][\n]"
ñ
10:57:26.771 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "[{"id":2,"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":3,"name":"Iron Marvin","alterego":"Tony Stark","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":4,"name":"NON touchable","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":6,"name":"Tony Lee","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":7,"name":"Hero-3754cade-fc8b-4a78-966d-882deba59dd9","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":8,"name":"Hero-e873178d-7496-4531-969c-628feef7832b","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":9,"name":"Hero-f829262f-0464-417a-b3c7-c03cc6ec7e65","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":10,"name":"Hero-cce0dd69-a77a-4db0-8b08-1ee77913804a","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":11,"name":"Iron Man","alterego":"Otro","description":"Otro","powers":["Armor"]},{"id":12,"name":"Hero-a66f2709-5533-4275-b188-8c7e6ab5c4f8","alterego":"Lee Tony","description":""
]10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << HTTP/1.1 200 
^10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Server: Cowboy
ü10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
ˆ10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
 10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Connection: keep-alive
n10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Content-Type: application/json
j10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Transfer-Encoding: chunked
s10:57:26.771 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Date: Fri, 20 Jun 2025 16:57:26 GMT
^10:57:26.772 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Via: 1.1 vegur
r10:57:26.772 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Server-Timing: cfReqDur;dur=38.761
y10:57:26.772 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-3 << Cf-Team: 282fdf2c0a000111d45f45f400000001
|10:57:26.772 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
‚10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Genius billionaire","powers":["Armor","Flight"]},{"id":13,"name":"Hero-f04b621c-40bc-4c73-a045-02964a6a5395","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":14,"name":"Hero-ef028da8-dbe3-475f-82f8-3ac703c379b2","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":15,"name":"Hero-0472a66d-9a13-4991-ab1f-203ae16986ee","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":16,"name":"Hero-d409000a-e839-4b2f-afa6-11031fb701fb","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":17,"name":"Hero-65fb3807-1ca6-4cea-bc70-76cb4ff55b11","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":18,"name":"Hero-b596a1f0-3313-4353-acbc-88f9f0129db8","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor",""
W10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "[\r][\n]"
X10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "A[\r][\n]"
a10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "Flight"]}][\r][\n]"
X10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "0[\r][\n]"
W10:57:26.817 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-3 << "[\r][\n]"
œ10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 3][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: set socket timeout to 0
Å10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 3][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-3: Close connection
~10:57:26.818 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:26.818 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 227
1 < 200
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438646&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=BqGXr0BWZuiXqzdKq7m5HsfA3dpY5sIksakFLRce2P4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:26 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=38.761
.1 < Cf-Team: 282fdf2c0a000111d45f45f400000001
Â[{"id":2,"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":3,"name":"Iron Marvin","alterego":"Tony Stark","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":4,"name":"NON touchable","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":6,"name":"Tony Lee","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":7,"name":"Hero-3754cade-fc8b-4a78-966d-882deba59dd9","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":8,"name":"Hero-e873178d-7496-4531-969c-628feef7832b","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":9,"name":"Hero-f829262f-0464-417a-b3c7-c03cc6ec7e65","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":10,"name":"Hero-cce0dd69-a77a-4db0-8b08-1ee77913804a","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":11,"name":"Iron Man","alterego":"Otro","description":"Otro","powers":["Armor"]},{"id":12,"name":"Hero-a66f2709-5533-4275-b188-8c7e6ab5c4f8","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":13,"name":"Hero-f04b621c-40bc-4c73-a045-02964a6a5395","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":14,"name":"Hero-ef028da8-dbe3-475f-82f8-3ac703c379b2","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":15,"name":"Hero-0472a66d-9a13-4991-ab1f-203ae16986ee","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":16,"name":"Hero-d409000a-e839-4b2f-afa6-11031fb701fb","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":17,"name":"Hero-65fb3807-1ca6-4cea-bc70-76cb4ff55b11","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]},{"id":18,"name":"Hero-b596a1f0-3313-4353-acbc-88f9f0129db8","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}]

?10:57:26.824 [Test worker] INFO com.intuit.karate -- [print] [
  {
    "id": 2,
    "name": "Superman",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 3,
    "name": "Iron Marvin",
    "alterego": "Tony Stark",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 4,
    "name": "NON touchable",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 6,
    "name": "Tony Lee",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 7,
9    "name": "Hero-3754cade-fc8b-4a78-966d-882deba59dd9",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 8,
9    "name": "Hero-e873178d-7496-4531-969c-628feef7832b",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 9,
9    "name": "Hero-f829262f-0464-417a-b3c7-c03cc6ec7e65",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 10,
9    "name": "Hero-cce0dd69-a77a-4db0-8b08-1ee77913804a",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 11,
    "name": "Iron Man",
    "alterego": "Otro",
    "description": "Otro",
    "powers": [
      "Armor"
    ]
  },
  {
    "id": 12,
9    "name": "Hero-a66f2709-5533-4275-b188-8c7e6ab5c4f8",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 13,
9    "name": "Hero-f04b621c-40bc-4c73-a045-02964a6a5395",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 14,
9    "name": "Hero-ef028da8-dbe3-475f-82f8-3ac703c379b2",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 15,
9    "name": "Hero-0472a66d-9a13-4991-ab1f-203ae16986ee",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 16,
9    "name": "Hero-d409000a-e839-4b2f-afa6-11031fb701fb",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 17,
9    "name": "Hero-65fb3807-1ca6-4cea-bc70-76cb4ff55b11",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  },
  {
    "id": 18,
9    "name": "Hero-b596a1f0-3313-4353-acbc-88f9f0129db8",
    "alterego": "Lee Tony",
)    "description": "Genius billionaire",
    "powers": [
      "Armor",
      "Flight"
    ]
  }
]
 
r10:57:26.831 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:26.831 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:26.832 [Test worker] DEBUG com.intuit.karate -- request:
O1 > GET http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/4
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate


˘10:57:26.832 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:26.832 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 4][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:26.832 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:26.832 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:26.917 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63660<->54.165.58.209:80
é10:57:26.917 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: set socket timeout to 30000
å10:57:26.917 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request GET /maragarc/api/characters/4 HTTP/1.1
r10:57:26.917 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:26.917 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
w10:57:26.917 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 >> GET /maragarc/api/characters/4 HTTP/1.1
{10:57:26.917 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:26.917 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 >> Connection: Keep-Alive
Ç10:57:26.917 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:26.917 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 >> Accept-Encoding: gzip,deflate
~10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "GET /maragarc/api/characters/4 HTTP/1.1[\r][\n]"
Ç10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Connection: Keep-Alive[\r][\n]"
â10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:26.917 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 >> "[\r][\n]"
d10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "HTTP/1.1 200 [\r][\n]"
e10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Server: Cowboy[\r][\n]"
¶10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}[\r][\n]"
˝10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D[\r][\n]"
—10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Connection: keep-alive[\r][\n]"
u10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Content-Type: application/json[\r][\n]"
q10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Date: Fri, 20 Jun 2025 16:57:27 GMT[\r][\n]"
e10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Via: 1.1 vegur[\r][\n]"
x10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Server-Timing: cfReqDur;dur=40.75[\r][\n]"
Ä10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "Cf-Team: 282fdf2cf5000111d45f46f400000001[\r][\n]"
W10:57:27.009 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "[\r][\n]"
]10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << HTTP/1.1 200 
^10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Server: Cowboy
ü10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
ˆ10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
 10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Connection: keep-alive
n10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Content-Type: application/json
j10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Transfer-Encoding: chunked
s10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Date: Fri, 20 Jun 2025 16:57:27 GMT
^10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Via: 1.1 vegur
q10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Server-Timing: cfReqDur;dur=40.75
y10:57:27.009 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-4 << Cf-Team: 282fdf2cf5000111d45f46f400000001
|10:57:27.010 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "6A[\r][\n]"
¡10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "{"id":4,"name":"NON touchable","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor",[\r][\n]"
X10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "A[\r][\n]"
a10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << ""Flight"]}[\r][\n]"
X10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "0[\r][\n]"
W10:57:27.064 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-4 << "[\r][\n]"
œ10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 4][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: set socket timeout to 0
Å10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 4][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-4: Close connection
~10:57:27.064 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:27.064 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 232
1 < 200
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:27 GMT
1 < Via: 1.1 vegur
&1 < Server-Timing: cfReqDur;dur=40.75
.1 < Cf-Team: 282fdf2cf5000111d45f46f400000001
u{"id":4,"name":"NON touchable","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}

f10:57:27.070 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
?10:57:27.071 [Test worker] INFO com.intuit.karate -- [print] {
  "id": 4,
  "name": "NON touchable",
  "alterego": "Lee Tony",
'  "description": "Genius billionaire",
  "powers": [
    "Armor",
    "Flight"
  ]
}
 
r10:57:27.077 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:27.077 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:27.077 [Test worker] DEBUG com.intuit.karate -- request:
Q1 > GET http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/999
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate


˘10:57:27.077 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:27.077 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 5][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:27.077 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:27.077 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:27.164 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63664<->54.165.58.209:80
é10:57:27.164 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: set socket timeout to 30000
é10:57:27.165 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request GET /maragarc/api/characters/999 HTTP/1.1
r10:57:27.165 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:27.165 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
y10:57:27.165 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 >> GET /maragarc/api/characters/999 HTTP/1.1
{10:57:27.165 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:27.165 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 >> Connection: Keep-Alive
Ç10:57:27.165 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:27.165 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 >> Accept-Encoding: gzip,deflate
Ä10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "GET /maragarc/api/characters/999 HTTP/1.1[\r][\n]"
Ç10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Connection: Keep-Alive[\r][\n]"
â10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:27.165 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 >> "[\r][\n]"
d10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "HTTP/1.1 404 [\r][\n]"
e10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Server: Cowboy[\r][\n]"
¶10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}[\r][\n]"
˝10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D[\r][\n]"
—10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Connection: keep-alive[\r][\n]"
u10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Content-Type: application/json[\r][\n]"
q10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Date: Fri, 20 Jun 2025 16:57:27 GMT[\r][\n]"
e10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Via: 1.1 vegur[\r][\n]"
y10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Server-Timing: cfReqDur;dur=39.276[\r][\n]"
Ä10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "Cf-Team: 282fdf2df4000111d45f480400000001[\r][\n]"
W10:57:27.260 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "[\r][\n]"
]10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << HTTP/1.1 404 
^10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Server: Cowboy
ü10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
ˆ10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
 10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Connection: keep-alive
n10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Content-Type: application/json
j10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Transfer-Encoding: chunked
s10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Date: Fri, 20 Jun 2025 16:57:27 GMT
^10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Via: 1.1 vegur
r10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Server-Timing: cfReqDur;dur=39.276
y10:57:27.260 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-5 << Cf-Team: 282fdf2df4000111d45f480400000001
|10:57:27.260 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "15[\r][\n]"
l10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "{"error":"Character n[\r][\n]"
X10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "A[\r][\n]"
a10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "ot found"}[\r][\n]"
X10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "0[\r][\n]"
W10:57:27.306 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-5 << "[\r][\n]"
œ10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 5][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: set socket timeout to 0
Å10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 5][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-5: Close connection
~10:57:27.306 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:27.307 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 229
1 < 404
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:27 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=39.276
.1 < Cf-Team: 282fdf2df4000111d45f480400000001
 {"error":"Character not found"}

?10:57:27.308 [Test worker] INFO com.intuit.karate -- [print] {
!  "error": "Character not found"
}
 
f10:57:27.312 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
j10:57:27.322 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:27.335 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
l[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@2ab9e43e
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7de3206d
p[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6dece1f9
w[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@2ab9e43e
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@2b936b04
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:27.335 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
:---------------------------------------------------------
Gfeature: classpath:com/pichincha/features/MarvelHeros/getHeros.feature
7scenarios:  3 | passed:  3 | failed:  0 | time: 0.7137
:---------------------------------------------------------

f10:57:27.395 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
j10:57:27.395 [Test worker] INFO com.intuit.karate -- [print] Changing name to new hero to avoid repeated 
n10:57:27.396 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['name']
f10:57:27.396 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
ë10:57:27.396 [Test worker] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $ key name value Hero-b5492b8b-ba71-48ef-b26c-948181578eb3
r10:57:27.396 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:27.396 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:27.396 [Test worker] DEBUG com.intuit.karate -- request:
N1 > POST http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters
21 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 137
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate
ä{"name":"Hero-b5492b8b-ba71-48ef-b26c-948181578eb3","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}

˘10:57:27.396 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:27.396 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 6][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:27.396 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:27.397 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:27.490 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63668<->54.165.58.209:80
é10:57:27.490 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-6: set socket timeout to 30000
ã10:57:27.491 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /maragarc/api/characters HTTP/1.1
r10:57:27.491 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:27.491 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
v10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> POST /maragarc/api/characters HTTP/1.1
}10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> Content-Type: application/json; charset=UTF-8
c10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> Content-Length: 137
{10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> Connection: Keep-Alive
Ç10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:27.491 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 >> Accept-Encoding: gzip,deflate
}10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "POST /maragarc/api/characters HTTP/1.1[\r][\n]"
Ñ10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
j10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "Content-Length: 137[\r][\n]"
Ç10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "Connection: Keep-Alive[\r][\n]"
â10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "[\r][\n]"
ÿ10:57:27.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 >> "{"name":"Hero-b5492b8b-ba71-48ef-b26c-948181578eb3","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}"
d10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "HTTP/1.1 201 [\r][\n]"
e10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Server: Cowboy[\r][\n]"
¶10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}[\r][\n]"
˝10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D[\r][\n]"
—10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Connection: keep-alive[\r][\n]"
u10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Content-Type: application/json[\r][\n]"
q10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Date: Fri, 20 Jun 2025 16:57:27 GMT[\r][\n]"
e10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Via: 1.1 vegur[\r][\n]"
x10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Server-Timing: cfReqDur;dur=64.81[\r][\n]"
Ä10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "Cf-Team: 282fdf2f38000111d45f49f400000001[\r][\n]"
W10:57:27.642 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "[\r][\n]"
]10:57:27.642 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << HTTP/1.1 201 
^10:57:27.643 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Server: Cowboy
ü10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
ˆ10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
 10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Connection: keep-alive
n10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Content-Type: application/json
j10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Transfer-Encoding: chunked
s10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Date: Fri, 20 Jun 2025 16:57:27 GMT
^10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Via: 1.1 vegur
q10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Server-Timing: cfReqDur;dur=64.81
y10:57:27.644 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-6 << Cf-Team: 282fdf2f38000111d45f49f400000001
|10:57:27.644 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:27.673 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "87[\r][\n]"
ﬁ10:57:27.673 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "{"id":20,"name":"Hero-b5492b8b-ba71-48ef-b26c-948181578eb3","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor",[\r][\n]"
X10:57:27.674 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "A[\r][\n]"
a10:57:27.674 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << ""Flight"]}[\r][\n]"
X10:57:27.674 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "0[\r][\n]"
W10:57:27.674 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-6 << "[\r][\n]"
œ10:57:27.675 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 6][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:27.675 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-6: set socket timeout to 0
Å10:57:27.675 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 6][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:27.675 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:27.675 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-6: Close connection
~10:57:27.678 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:27.678 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 279
1 < 201
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:27 GMT
1 < Via: 1.1 vegur
&1 < Server-Timing: cfReqDur;dur=64.81
.1 < Cf-Team: 282fdf2f38000111d45f49f400000001
í{"id":20,"name":"Hero-b5492b8b-ba71-48ef-b26c-948181578eb3","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}

n10:57:27.682 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['name']
f10:57:27.691 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
r10:57:27.693 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:27.693 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:27.693 [Test worker] DEBUG com.intuit.karate -- request:
N1 > POST http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters
21 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 77
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate
N{"name":"Iron Man","alterego":"Otro","description":"Otro","powers":["Armor"]}

˘10:57:27.693 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
ˇ10:57:27.694 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 7][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:27.694 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:27.694 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:27.777 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63671<->54.165.58.209:80
é10:57:27.777 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-7: set socket timeout to 30000
ã10:57:27.777 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /maragarc/api/characters HTTP/1.1
r10:57:27.777 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:27.777 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
v10:57:27.777 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> POST /maragarc/api/characters HTTP/1.1
}10:57:27.777 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> Content-Type: application/json; charset=UTF-8
b10:57:27.777 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> Content-Length: 77
{10:57:27.778 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
f10:57:27.778 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> Connection: Keep-Alive
Ç10:57:27.778 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
m10:57:27.778 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 >> Accept-Encoding: gzip,deflate
}10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "POST /maragarc/api/characters HTTP/1.1[\r][\n]"
Ñ10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
i10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "Content-Length: 77[\r][\n]"
Ç10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
m10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "Connection: Keep-Alive[\r][\n]"
â10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
t10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "Accept-Encoding: gzip,deflate[\r][\n]"
W10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "[\r][\n]"
ú10:57:27.778 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 >> "{"name":"Iron Man","alterego":"Otro","description":"Otro","powers":["Armor"]}"
d10:57:27.893 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "HTTP/1.1 400 [\r][\n]"
e10:57:27.893 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Server: Cowboy[\r][\n]"
¶10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}[\r][\n]"
˝10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D[\r][\n]"
—10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
m10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Connection: keep-alive[\r][\n]"
u10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Content-Type: application/json[\r][\n]"
q10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Transfer-Encoding: chunked[\r][\n]"
z10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Date: Fri, 20 Jun 2025 16:57:27 GMT[\r][\n]"
e10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Via: 1.1 vegur[\r][\n]"
y10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Server-Timing: cfReqDur;dur=65.446[\r][\n]"
Ä10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "Cf-Team: 282fdf3052000111d45f4be400000001[\r][\n]"
W10:57:27.894 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "[\r][\n]"
]10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << HTTP/1.1 400 
^10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Server: Cowboy
ü10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
ˆ10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
 10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
f10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Connection: keep-alive
n10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Content-Type: application/json
j10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Transfer-Encoding: chunked
s10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Date: Fri, 20 Jun 2025 16:57:27 GMT
^10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Via: 1.1 vegur
r10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Server-Timing: cfReqDur;dur=65.446
y10:57:27.894 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-7 << Cf-Team: 282fdf3052000111d45f4be400000001
|10:57:27.895 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Y10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "1F[\r][\n]"
v10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "{"error":"Character name alread[\r][\n]"
X10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "A[\r][\n]"
a10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "y exists"}[\r][\n]"
X10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "0[\r][\n]"
W10:57:27.944 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-7 << "[\r][\n]"
œ10:57:27.944 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 7][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ä10:57:27.944 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-7: set socket timeout to 0
Å10:57:27.944 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 7][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:27.944 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
É10:57:27.944 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-7: Close connection
~10:57:27.945 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:27.945 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 251
1 < 400
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438647&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=Yuu3uXMw4bZZpPIek4wQ2d1aAYyTTIl3tB509eik9Jk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:27 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=65.446
.1 < Cf-Team: 282fdf3052000111d45f4be400000001
*{"error":"Character name already exists"}

f10:57:27.946 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
	f10:57:27.950 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
	r10:57:27.950 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
	w10:57:27.950 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
	?10:57:27.950 [Test worker] DEBUG com.intuit.karate -- request:
	N1 > POST http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters
	21 > Content-Type: application/json; charset=UTF-8
	1 > Content-Length: 54
	01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
	1 > Connection: Keep-Alive
	71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
	"1 > Accept-Encoding: gzip,deflate
	7{"name":"","alterego":"","description":"","powers":[]}
	
	˘10:57:27.951 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
	ˇ10:57:27.951 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 8][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
	ô10:57:27.951 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
	ß10:57:27.951 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
	ù10:57:28.036 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63682<->54.165.58.209:80
	é10:57:28.036 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-8: set socket timeout to 30000
	ã10:57:28.036 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request POST /maragarc/api/characters HTTP/1.1
	r10:57:28.036 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
	q10:57:28.036 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
	v10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> POST /maragarc/api/characters HTTP/1.1
	}10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> Content-Type: application/json; charset=UTF-8
	b10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> Content-Length: 54
	{10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
	f10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> Connection: Keep-Alive
	Ç10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
	m10:57:28.036 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 >> Accept-Encoding: gzip,deflate
	}10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "POST /maragarc/api/characters HTTP/1.1[\r][\n]"
	Ñ10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
	i10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "Content-Length: 54[\r][\n]"
	Ç10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
	m10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "Connection: Keep-Alive[\r][\n]"
	â10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
	t10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "Accept-Encoding: gzip,deflate[\r][\n]"
	W10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "[\r][\n]"
	Ö10:57:28.036 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 >> "{"name":"","alterego":"","description":"","powers":[]}"
	d10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "HTTP/1.1 400 [\r][\n]"
	e10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Server: Cowboy[\r][\n]"
	¶10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}[\r][\n]"
	˝10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D[\r][\n]"
	—10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
	m10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Connection: keep-alive[\r][\n]"
	u10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Content-Type: application/json[\r][\n]"
	q10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Transfer-Encoding: chunked[\r][\n]"
	z10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Date: Fri, 20 Jun 2025 16:57:28 GMT[\r][\n]"
	e10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Via: 1.1 vegur[\r][\n]"
	y10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Server-Timing: cfReqDur;dur=65.254[\r][\n]"
	Ä10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "Cf-Team: 282fdf315a000111d45f4d5400000001[\r][\n]"
	W10:57:28.156 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "[\r][\n]"
	]10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << HTTP/1.1 400 
	^10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Server: Cowboy
	ü10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}
	ˆ10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D
	 10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
	f10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Connection: keep-alive
	n10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Content-Type: application/json
	j10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Transfer-Encoding: chunked
	s10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Date: Fri, 20 Jun 2025 16:57:28 GMT
	^10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Via: 1.1 vegur
	r10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Server-Timing: cfReqDur;dur=65.254
	y10:57:28.156 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-8 << Cf-Team: 282fdf315a000111d45f4d5400000001
	|10:57:28.156 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
	Y10:57:28.202 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "7A[\r][\n]"
	—10:57:28.202 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "{"name":"Name is required","description":"Description is required","powers":"Powers are required","alterego":"Alterego is [\r][\n]"
	X10:57:28.203 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "A[\r][\n]"
	a10:57:28.203 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "required"}[\r][\n]"
	X10:57:28.203 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "0[\r][\n]"
	W10:57:28.203 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-8 << "[\r][\n]"
	œ10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 8][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
	ä10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-8: set socket timeout to 0
	Å10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 8][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
	Ö10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
	É10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-8: Close connection
	~10:57:28.203 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
	Y10:57:28.203 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 253
	1 < 400
	1 < Server: Cowboy
	‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}
	´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D
	1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
	1 < Connection: keep-alive
	#1 < Content-Type: application/json
	1 < Transfer-Encoding: chunked
	(1 < Date: Fri, 20 Jun 2025 16:57:28 GMT
	1 < Via: 1.1 vegur
	'1 < Server-Timing: cfReqDur;dur=65.254
	.1 < Cf-Team: 282fdf315a000111d45f4d5400000001
	Ö{"name":"Name is required","description":"Description is required","powers":"Powers are required","alterego":"Alterego is required"}
	
	f10:57:28.206 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
	j10:57:28.224 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
	Ä10:57:28.250 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
	+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
	P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
	U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
	"[THYMELEAF] * Template resolvers:
	N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
	![THYMELEAF] * Message resolvers:
	H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
	[THYMELEAF] * Link builders:
	@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
	\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
	[THYMELEAF]     * Prefix: "th"
	5[THYMELEAF]     * Processors for Template Mode: HTML
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
	|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
	[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
	n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
	|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
	v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
	p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
	|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
	|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
	n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
	ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
	ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
	ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
	Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
	ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
	}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
	å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
	í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
	w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
	Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
	}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
	à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
	à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
	t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
	z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
	Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
	Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
	l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
	É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
	å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
	å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
	w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
	z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
	É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
	}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
	}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
	~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
	w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
	x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
	7[THYMELEAF]         * Text Processors by [precedence]:
	a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
	:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
	g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
	@[THYMELEAF]         * CDATA Section Processors by [precedence]:
	i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
	:[THYMELEAF]         * Comment Processors by [precedence]:
	d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
	g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
	4[THYMELEAF]     * Processors for Template Mode: XML
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
	m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
	o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
	a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
	m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
	i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
	e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
	m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
	m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
	a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
	}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
	â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
	ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
	q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
	l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
	j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
	l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
	r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
	n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
	n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
	r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
	n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
	x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
	7[THYMELEAF]         * Text Processors by [precedence]:
	a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
	@[THYMELEAF]         * CDATA Section Processors by [precedence]:
	i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
	:[THYMELEAF]         * Comment Processors by [precedence]:
	d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
	5[THYMELEAF]     * Processors for Template Mode: TEXT
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
	o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
	a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
	m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
	i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
	e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
	m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
	m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
	a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
	u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
	j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
	l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
	n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
	n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
	f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
	n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
	7[THYMELEAF]         * Text Processors by [precedence]:
	a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
	;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
	o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
	a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
	m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
	i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
	e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
	m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
	m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
	a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
	u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
	j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
	l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
	n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
	n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
	f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
	n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
	7[THYMELEAF]         * Text Processors by [precedence]:
	a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
	4[THYMELEAF]     * Processors for Template Mode: CSS
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
	o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
	a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
	m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
	i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
	e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
	m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
	m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
	a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
	u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
	j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
	l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
	n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
	n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
	n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
	f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
	7[THYMELEAF]         * Text Processors by [precedence]:
	a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
	&[THYMELEAF]     * Expression Objects:
	[THYMELEAF]         * #ctx
	[THYMELEAF]         * #root
	[THYMELEAF]         * #vars
	[THYMELEAF]         * #object
	[THYMELEAF]         * #locale
	#[THYMELEAF]         * #conversions
	[THYMELEAF]         * #uris
	![THYMELEAF]         * #temporals
	![THYMELEAF]         * #calendars
	[THYMELEAF]         * #dates
	[THYMELEAF]         * #bools
	[THYMELEAF]         * #numbers
	[THYMELEAF]         * #objects
	[THYMELEAF]         * #strings
	[THYMELEAF]         * #arrays
	[THYMELEAF]         * #lists
	[THYMELEAF]         * #sets
	[THYMELEAF]         * #maps
	"[THYMELEAF]         * #aggregates
	 [THYMELEAF]         * #messages
	[THYMELEAF]         * #ids
	 [THYMELEAF]         * #execInfo
	[THYMELEAF]         * #request
	 [THYMELEAF]         * #response
	[THYMELEAF]         * #session
	&[THYMELEAF]         * #servletContext
	([THYMELEAF]     * Execution Attributes:
	k[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@36525ab
	~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@52f43225
	p[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@55d1f065
	v[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@36525ab
	w[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@f9a5e3f
	X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
	[THYMELEAF]     * Prefix: "ka"
	5[THYMELEAF]     * Processors for Template Mode: HTML
	d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
	][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
	f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
	w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
	i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
	*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
	i10:57:28.251 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
	:---------------------------------------------------------
	Hfeature: classpath:com/pichincha/features/MarvelHeros/saveHeros.feature
	7scenarios:  3 | passed:  3 | failed:  0 | time: 0.8000
	:---------------------------------------------------------
	

f10:57:28.283 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $

?10:57:28.284 [Test worker] INFO com.intuit.karate -- [print] {

  "name": "Superman",

  "alterego": "Lee Tony",

'  "description": "Genius billionaire",

  "powers": [

    "Armor",

    "Flight"

  ]

}

 

r10:57:28.285 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate

w10:57:28.285 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context

?10:57:28.285 [Test worker] DEBUG com.intuit.karate -- request:

O1 > PUT http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/2

21 > Content-Type: application/json; charset=UTF-8

1 > Content-Length: 104

01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com

1 > Connection: Keep-Alive

71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)

"1 > Accept-Encoding: gzip,deflate

i{"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}



˘10:57:28.285 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]

ˇ10:57:28.285 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 9][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]

ô10:57:28.285 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80

ß10:57:28.285 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80

ù10:57:28.370 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63685<->54.165.58.209:80

é10:57:28.370 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-9: set socket timeout to 30000

å10:57:28.370 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request PUT /maragarc/api/characters/2 HTTP/1.1

r10:57:28.370 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED

q10:57:28.370 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED

w10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> PUT /maragarc/api/characters/2 HTTP/1.1

}10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> Content-Type: application/json; charset=UTF-8

c10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> Content-Length: 104

{10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com

f10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> Connection: Keep-Alive

Ç10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)

m10:57:28.370 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 >> Accept-Encoding: gzip,deflate

~10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "PUT /maragarc/api/characters/2 HTTP/1.1[\r][\n]"

Ñ10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"

j10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "Content-Length: 104[\r][\n]"

Ç10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"

m10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "Connection: Keep-Alive[\r][\n]"

â10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"

t10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "Accept-Encoding: gzip,deflate[\r][\n]"

W10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "[\r][\n]"

∑10:57:28.370 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 >> "{"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}"

d10:57:28.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "HTTP/1.1 200 [\r][\n]"

e10:57:28.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Server: Cowboy[\r][\n]"

¶10:57:28.491 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}[\r][\n]"

˝10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D[\r][\n]"

—10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"

m10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Connection: keep-alive[\r][\n]"

u10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Content-Type: application/json[\r][\n]"

q10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Transfer-Encoding: chunked[\r][\n]"

z10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Date: Fri, 20 Jun 2025 16:57:28 GMT[\r][\n]"

e10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Via: 1.1 vegur[\r][\n]"

y10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Server-Timing: cfReqDur;dur=65.218[\r][\n]"

Ä10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "Cf-Team: 282fdf32a8000111d45f4df400000001[\r][\n]"

W10:57:28.492 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "[\r][\n]"

]10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << HTTP/1.1 200 

^10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Server: Cowboy

ü10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}

ˆ10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D

 10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}

f10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Connection: keep-alive

n10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Content-Type: application/json

j10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Transfer-Encoding: chunked

s10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Date: Fri, 20 Jun 2025 16:57:28 GMT

^10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Via: 1.1 vegur

r10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Server-Timing: cfReqDur;dur=65.218

y10:57:28.492 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-9 << Cf-Team: 282fdf32a8000111d45f4df400000001

|10:57:28.492 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely

Y10:57:28.546 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "65[\r][\n]"

º10:57:28.547 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "{"id":2,"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor",[\r][\n]"

X10:57:28.547 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "A[\r][\n]"

a10:57:28.547 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << ""Flight"]}[\r][\n]"

X10:57:28.547 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "0[\r][\n]"

W10:57:28.547 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-9 << "[\r][\n]"

œ10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 9][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely

ä10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-9: set socket timeout to 0

Å10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 9][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]

Ö10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down

É10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-9: Close connection

~10:57:28.547 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down

Y10:57:28.547 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 262

1 < 200

1 < Server: Cowboy

‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}

´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D

1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}

1 < Connection: keep-alive

#1 < Content-Type: application/json

1 < Transfer-Encoding: chunked

(1 < Date: Fri, 20 Jun 2025 16:57:28 GMT

1 < Via: 1.1 vegur

'1 < Server-Timing: cfReqDur;dur=65.218

.1 < Cf-Team: 282fdf32a8000111d45f4df400000001

p{"id":2,"name":"Superman","alterego":"Lee Tony","description":"Genius billionaire","powers":["Armor","Flight"]}



f10:57:28.548 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $

l10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $['id']

f10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $

f10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $

h10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $ key id value {}

f10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $

g10:57:28.549 [Test worker] DEBUG com.jayway.jsonpath.internal.JsonContext -- Put path $ key id value 2
f10:57:28.553 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
r10:57:28.553 [Test worker] DEBUG org.apache.http.client.protocol.RequestAddCookies -- CookieSpec selected: karate
w10:57:28.553 [Test worker] DEBUG org.apache.http.client.protocol.RequestAuthCache -- Auth cache not set in the context
?10:57:28.553 [Test worker] DEBUG com.intuit.karate -- request:
Q1 > PUT http://bp-se-test-cabcd9b246a5.herokuapp.com/maragarc/api/characters/999
21 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 107
01 > Host: bp-se-test-cabcd9b246a5.herokuapp.com
1 > Connection: Keep-Alive
71 > User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
"1 > Accept-Encoding: gzip,deflate
l{"name":"Iron Man","alterego":"Tony Stark","description":"Updated description","powers":["Armor","Flight"]}

˘10:57:28.554 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection request: [route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 0 of 5; total allocated: 0 of 10]
Ä10:57:28.554 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection leased: [id: 10][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 0; route allocated: 1 of 5; total allocated: 1 of 10]
ô10:57:28.554 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Opening connection {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80
ß10:57:28.554 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connecting to bp-se-test-cabcd9b246a5.herokuapp.com/54.165.58.209:80
ù10:57:28.639 [Test worker] DEBUG org.apache.http.impl.conn.DefaultHttpClientConnectionOperator -- Connection established 172.16.0.2:63688<->54.165.58.209:80
è10:57:28.639 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-10: set socket timeout to 30000
é10:57:28.639 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Executing request PUT /maragarc/api/characters/999 HTTP/1.1
r10:57:28.639 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Target auth state: UNCHALLENGED
q10:57:28.639 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Proxy auth state: UNCHALLENGED
z10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> PUT /maragarc/api/characters/999 HTTP/1.1
~10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> Content-Type: application/json; charset=UTF-8
d10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> Content-Length: 107
|10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> Host: bp-se-test-cabcd9b246a5.herokuapp.com
g10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> Connection: Keep-Alive
É10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)
n10:57:28.639 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 >> Accept-Encoding: gzip,deflate
Å10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "PUT /maragarc/api/characters/999 HTTP/1.1[\r][\n]"
Ö10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "Content-Type: application/json; charset=UTF-8[\r][\n]"
k10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "Content-Length: 107[\r][\n]"
É10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "Host: bp-se-test-cabcd9b246a5.herokuapp.com[\r][\n]"
n10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "Connection: Keep-Alive[\r][\n]"
ä10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "User-Agent: Apache-HttpClient/4.5.14 (Java/21.0.7)[\r][\n]"
u10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "Accept-Encoding: gzip,deflate[\r][\n]"
X10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "[\r][\n]"
ª10:57:28.639 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 >> "{"name":"Iron Man","alterego":"Tony Stark","description":"Updated description","powers":["Armor","Flight"]}"
e10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "HTTP/1.1 404 [\r][\n]"
f10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Server: Cowboy[\r][\n]"
ß10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}[\r][\n]"
˛10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D[\r][\n]"
“10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}[\r][\n]"
n10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Connection: keep-alive[\r][\n]"
v10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Content-Type: application/json[\r][\n]"
r10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Transfer-Encoding: chunked[\r][\n]"
{10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Date: Fri, 20 Jun 2025 16:57:28 GMT[\r][\n]"
f10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Via: 1.1 vegur[\r][\n]"
z10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Server-Timing: cfReqDur;dur=64.511[\r][\n]"
Å10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "Cf-Team: 282fdf33b1000111d45f4ee400000001[\r][\n]"
X10:57:28.754 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "[\r][\n]"
^10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << HTTP/1.1 404 
_10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Server: Cowboy
†10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}
˜10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D
À10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
g10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Connection: keep-alive
o10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Content-Type: application/json
k10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Transfer-Encoding: chunked
t10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Date: Fri, 20 Jun 2025 16:57:28 GMT
_10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Via: 1.1 vegur
s10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Server-Timing: cfReqDur;dur=64.511
z10:57:28.754 [Test worker] DEBUG org.apache.http.headers -- http-outgoing-10 << Cf-Team: 282fdf33b1000111d45f4ee400000001
|10:57:28.754 [Test worker] DEBUG org.apache.http.impl.execchain.MainClientExec -- Connection can be kept alive indefinitely
Z10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "15[\r][\n]"
m10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "{"error":"Character n[\r][\n]"
Y10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "A[\r][\n]"
b10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "ot found"}[\r][\n]"
Y10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "0[\r][\n]"
X10:57:28.804 [Test worker] DEBUG org.apache.http.wire -- http-outgoing-10 << "[\r][\n]"
–10:57:28.804 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection [id: 10][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80] can be kept alive indefinitely
ã10:57:28.805 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-10: set socket timeout to 0
Ç10:57:28.805 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection released: [id: 10][route: {}->http://bp-se-test-cabcd9b246a5.herokuapp.com:80][total available: 1; route allocated: 1 of 5; total allocated: 1 of 10]
Ö10:57:28.805 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager is shutting down
Ñ10:57:28.805 [Test worker] DEBUG org.apache.http.impl.conn.DefaultManagedHttpClientConnection -- http-outgoing-10: Close connection
~10:57:28.805 [Test worker] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager -- Connection manager shut down
Y10:57:28.805 [Test worker] DEBUG com.intuit.karate -- response time in milliseconds: 251
1 < 404
1 < Server: Cowboy
‘1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D"}]}
´1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1750438648&sid=1b10b0ff-8a76-4548-befa-353fc6c6c045&s=dL2E5xIJ97ynx4tlQtGfb2fH7lOYsqVoBdjAb7xF1ew%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Connection: keep-alive
#1 < Content-Type: application/json
1 < Transfer-Encoding: chunked
(1 < Date: Fri, 20 Jun 2025 16:57:28 GMT
1 < Via: 1.1 vegur
'1 < Server-Timing: cfReqDur;dur=64.511
.1 < Cf-Team: 282fdf33b1000111d45f4ee400000001
 {"error":"Character not found"}

f10:57:28.806 [Test worker] DEBUG com.jayway.jsonpath.internal.path.CompiledPath -- Evaluating path: $
j10:57:28.812 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:28.844 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
k[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@fd87c22
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@42a05533
o[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@17053b5
v[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@fd87c22
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@3cad24ae
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:28.846 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
:---------------------------------------------------------
Jfeature: classpath:com/pichincha/features/MarvelHeros/updateHeros.feature
7scenarios:  2 | passed:  2 | failed:  0 | time: 0.5212
:---------------------------------------------------------

Karate version: 1.4.1
7======================================================
5elapsed:   4.50 | threads:    1 | thread time: 3.04 
3features:     4 | skipped:    0 | efficiency: 0.68
,scenarios:   10 | passed:    10 | failed: 0
7======================================================
j10:57:28.901 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:28.907 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
k[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@2b90cc1
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@39ae6408
n[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@cfacf0
v[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@2b90cc1
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@4c8abec7
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:28.909 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
j10:57:28.917 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:28.937 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
l[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@2210e466
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2f3cd727
p[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1af82ba8
w[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@2210e466
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@703cb756
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:28.938 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
j10:57:28.959 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
Ä10:57:28.965 [Test worker] DEBUG org.thymeleaf.TemplateEngine.CONFIG -- Initializing Thymeleaf Template engine configuration...
+[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
P[THYMELEAF] * Thymeleaf version: 3.1.2.RELEASE (built 2023-07-30T19:25:50+0000)
U[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
"[THYMELEAF] * Template resolvers:
N[THYMELEAF]     * [1] com.intuit.karate.template.ResourceHtmlTemplateResolver
![THYMELEAF] * Message resolvers:
H[THYMELEAF]     * org.thymeleaf.messageresolver.StandardMessageResolver
[THYMELEAF] * Link builders:
@[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
\[THYMELEAF] * Dialect [1 of 2]: Standard (com.intuit.karate.template.KarateStandardDialect)
[THYMELEAF]     * Prefix: "th"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
|[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
n[THYMELEAF]             * [* {th:each,data-th-each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
|[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
v[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
p[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
|[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
|[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
n[THYMELEAF]             * [* {th:with,data-th-with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
ä[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
ú[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ü[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
Ñ[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
ç[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
}[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.standard.processor.StandardActionTagProcessor
ê[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
í[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
å[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ú[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
î[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
à[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ê[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
é[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
ä[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
í[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
î[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ä[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ñ[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
à[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
é[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
†[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ê[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
å[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ú[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
ò[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
w[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.standard.processor.StandardHrefTagProcessor
Å[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
}[THYMELEAF]             * [* {th:method,data-th-method}] [1000]: org.thymeleaf.standard.processor.StandardMethodTagProcessor
à[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
à[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ô[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Å[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ë[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
õ[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
É[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
Ö[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ï[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ç[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ã[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
ì[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
â[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
è[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
á[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
t[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.standard.processor.StandardSrcTagProcessor
z[THYMELEAF]             * [* {th:value,data-th-value}] [1000]: org.thymeleaf.standard.processor.StandardValueTagProcessor
Ä[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
Ä[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
É[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
å[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
å[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
w[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
z[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
É[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
}[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
}[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
~[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
w[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
:[THYMELEAF]         * DOCTYPE Processors by [precedence]:
g[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
g[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
4[THYMELEAF]     * Processors for Template Mode: XML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
o[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
}[THYMELEAF]             * [* {th:attr}] [700]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrTagProcessor
â[THYMELEAF]             * [* {th:attrappend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrappendTagProcessor
ã[THYMELEAF]             * [* {th:attrprepend}] [900]: com.intuit.karate.template.KarateAttributeTagProcessor.KarateAttrprependTagProcessor
q[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
l[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
r[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
r[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
x[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
@[THYMELEAF]         * CDATA Section Processors by [precedence]:
i[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
:[THYMELEAF]         * Comment Processors by [precedence]:
d[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
5[THYMELEAF]     * Processors for Template Mode: TEXT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
;[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
4[THYMELEAF]     * Processors for Template Mode: CSS
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
m[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
o[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
a[THYMELEAF]             * [* {th:each}] [200]: com.intuit.karate.template.KarateEachTagProcessor
m[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
i[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
e[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
m[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
m[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
a[THYMELEAF]             * [* {th:with}] [600]: com.intuit.karate.template.KarateWithTagProcessor
u[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
j[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
l[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
n[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
n[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
n[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
f[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
7[THYMELEAF]         * Text Processors by [precedence]:
a[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
&[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
#[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
![THYMELEAF]         * #temporals
![THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
"[THYMELEAF]         * #aggregates
 [THYMELEAF]         * #messages
[THYMELEAF]         * #ids
 [THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
 [THYMELEAF]         * #response
[THYMELEAF]         * #session
&[THYMELEAF]         * #servletContext
([THYMELEAF]     * Execution Attributes:
l[THYMELEAF]         * "StandardExpressionParser": com.intuit.karate.template.KarateStandardDialect@3e55d844
~[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@33f2cf82
o[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@bea283b
w[THYMELEAF]         * "StandardVariableExpressionEvaluator": com.intuit.karate.template.KarateStandardDialect@3e55d844
x[THYMELEAF]         * "StandardConversionService": org.thymeleaf.standard.expression.StandardConversionService@73852720
X[THYMELEAF] * Dialect [2 of 2]: karate (com.intuit.karate.template.KarateScriptDialect)
[THYMELEAF]     * Prefix: "ka"
5[THYMELEAF]     * Processors for Template Mode: HTML
d[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
][THYMELEAF]             * [* {src}] [1000]: com.intuit.karate.template.KaScriptAttrProcessor
f[THYMELEAF]         * Element Model Processors by [matching element and attribute name] [precedence]:
w[THYMELEAF]             * [{script} {ka:scope,data-ka-scope}] [1000]: com.intuit.karate.template.KaScriptElemProcessor
i[THYMELEAF]             * [* {ka:set,data-ka-set}] [1000]: com.intuit.karate.template.KaSetElemProcessor
*[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
i10:57:28.966 [Test worker] DEBUG org.thymeleaf.TemplateEngine -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED

BHTML report: (paste into browser to view) | Karate version: 1.4.1
Éfile:///Users/marvingarcia/Documents/Projects/test-practico-ruta/test-automatisation-base/build/karate-reports/karate-summary.html
D===================================================================

